#+AUTHOR: Baptiste Mélès
#+TITLE: Myriade des sujets de dissertation philosophique
#+DATE: 17 mars 2025
#+OPTIONS: ':nil *:t -:t ::t <:t H:4 \n:nil ^:t arch:headline author:t
#+OPTIONS: c:nil creator:nil d:(not "LOGBOOK") date:t e:t email:nil
#+OPTIONS: f:t inline:t num:t p:nil pri:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t toc:nil todo:t |:t
#+CREATOR: Emacs 24.5.1 (Org mode 8.2.10)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: fr
#+SELECT_TAGS: export
#+STARTUP: showall
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS: [a4paper,12pt]
#+LATEX_HEADER: \usepackage[frenchb]{babel}
#+LATEX_HEADER: \usepackage{lmodern}
#+LATEX_HEADER: \DeclareUnicodeCharacter{00A0}{~}
#+LATEX_HEADER: \DeclareUnicodeCharacter{200B}{}
# bibliographystyle:authoryear
# bibliography:~/philo/fiches/bibliographie.bib
# -*- org-confirm-babel-evaluate: nil -*-
# -*- org-export-babel-evaluate: t -*-

# Mettre la variable org-confirm-babel-evaluate sur nil pour tout
# exécuter sans confirmer.

La « Myriade des sujets de dissertation philosophique » est une
compilation de quelque 15 000 sujets de dissertation de philosophie,
classés par [[alpha][ordre alphabétique]], par [[type][type]], par [[concours][concours]] et par [[theme][thème]].

Elle peut être utile :
- aux étudiantes et étudiants souhaitant se préparer aux examens ou aux
  concours ;
- aux examinatrices et examinateurs souhaitant s'assurer qu'un sujet a
  déjà été donné ou au contraire ne l'a jamais été ;
- aux personnes enseignant la méthodologie de la dissertation et
  souhaitant montrer [[type][quel type de traitement appelle chaque type
  de sujet]] ([[qnTot][question totale]] — et plus précisément question [[qnTotQuant][quantifiée]]
  ou [[qnTotMod][modalisée]]  —, [[qnPart][question partielle]], [[ntnUn][notion unique]], [[ntnCpl][couple
  de notions]], [[ctn][citation]]).

Cette méthode peut être utilisée en complément de la « Méthode de la
dissertation philosophique » du même auteur
(http://baptiste.meles.free.fr/site/B.Meles-Methode_dissertation.pdf).

Tous les fichiers et programmes ayant servi à produire le présent
document, ainsi que sa version la plus récente, sont archivés et
partagés de manière pérenne sur Software Heritage à l'adresse
https://archive.softwareheritage.org/browse/origin/directory/?origin_url=https://github.com/BapMel/SujetsDeDissertation.

L'auteur vous sera reconnaissant de lui signaler toute coquille
ou erreur.



  \section*{Concours compilés}

Sont compilés ici tous les sujets donnés aux épreuves écrites et orales
de plus d'une centaine de concours :
1. agrégation externe (22 années : 2003-2024) ;
2. agrégation interne (20 années : 2005-2024) ;
3. CAPES externe (21 années : 2004-2024) ;
4. CAPES interne (14 années : 2011-2024) ;
5. École normale supérieure de Paris, concours A​/​L (23 années :
   2002-2024) ;
5. École normale supérieure de Paris, concours B​/​L (23 années :
   2002-2024).


\section*{L'auteur}

\subsection*{Présentation}

Baptiste Mélès est chargé de recherche au CNRS, attaché aux Archives
Henri-Poincaré—PReST (CNRS, Université de Lorraine). Il étudie les
relations entre la philosophie, les sciences formelles (logique,
mathématiques, informatique) et la linguistique.

Il travaille sur l'histoire structurale de la philosophie de Jules
Vuillemin, la philosophie mathématique de Jean Cavaillès et d'Albert
Lautman, et étudie les textes de programmes informatiques comme des
textes à part entière. Il est l'auteur des /Classifications des systèmes
philosophiques/ (Paris, Vrin, 2016).

\subsection*{Autres documents pédagogiques du même auteur}

# Autres documents pédagogiques du même auteur :
1. « Méthode de la dissertation philosophique »
   (http://baptiste.meles.free.fr/site/B.Meles-Methode_dissertation.pdf,
   2010-2024) ;
2. « Méthode du commentaire de texte philosophique »
   (http://baptiste.meles.free.fr/site/B.Meles-Methode_commentaire_texte.pdf,
   2007-2024)
3. « Méthodologie du mémoire de Master »
   (http://baptiste.meles.free.fr/site/B.Meles-Memoire_Master.pdf,
   2014-2024) ;
4. « Le travail personnel en philosophie, de la licence à l'agrégation »
   (http://baptiste.meles.free.fr/site/B.Meles-Travail_perso.pdf,
   2008-2024) ;
5. « Bibliographie de philosophie » (avec Paul Clavier,
   [[http://baptiste.meles.free.fr/site/P_Clavier-B_Meles-Bibliographie_philosophie.pdf]], 2022)
6. « Les tables de vérité en braille »
   (http://baptiste.meles.free.fr/site/B.Meles-Table_verite_braille.pdf,
   2011).


\newpage

\setcounter{tocdepth}{4}
\tableofcontents

\newpage

#+name: compte
#+BEGIN_SRC sh :results none raw :exports results
  VALUE=$(wc -l)
  echo "("$VALUE" sujets)"
#+END_SRC



* <<alpha>> Tous les sujets par ordre alphabétique call_compte[:stdin triAlpha]()

\noindent
#+name: triAlpha
#+BEGIN_SRC sh :results output verbatim raw :exports results
./00-sujets | sed s/'$'/' \\\\'/g
#+END_SRC


* <<type>> Tri par type de sujet

Il existe trois grands types de sujets :

1. la [[qn][question]], phrase terminée par un point d'interrogation et appelant
   une réponse ;
2. les [[ntn][notions]], groupe nominal appelant l'étude d'un ou plusieurs
   concepts ;
3. la [[ctn][citation]], expression entre guillemets appelant l'examen d'une
   façon de parler.


** <<qn>> Question

Une question est une phrase terminée par un point d'interrogation et
appelant une réponse.

Toutes les questions se répartissent en deux grandes catégories, qui
appellent des types de réponses distincts :

1. les [[qnTot][questions totales]] sont celles qui /demandent une décision/ :
   elles portent sur la totalité d'une proposition et appellent à dire
   si elle est /vraie ou fausse/ ;
2. les [[qnPart][questions partielles]] sont celles qui /demandent une précision/ :
   elles posent une proposition et, au moyen d'un mot interrogatif — par
   exemple « qui », « que », « pourquoi », « comment », « à quelles
   conditions », « dans quelle mesure » —, appellent à déterminer le
   groupe nominal ou le complément circonstanciel qui /rend la
   proposition vraie/.


*** Toutes les questions call_compte[:stdin triQuestions]()

\noindent
#+name: triQuestions
#+BEGIN_SRC sh :results output verbatim raw :exports results
./00-sujets | grep '?' | sed s/'$'/' \\\\'/g
#+END_SRC


*** <<qnTot>> Question totale : demande de décision (oui/non)

Les questions totales sont celles qui /appellent une décision/,
c'est-à-dire une réponse par oui ou non. On trouvera ci-dessous la liste
de [[qnTotTout][toutes les questions totales]].

Parmi les questions totales, deux sous-catégories méritent une attention
particulière :

1. les [[qnTotQuant][questions /quantifiées/]] sont celles qui portent sur des problèmes
   d'universalité et d'existence : elles contiennent des mots comme
   « tous », « existe-t-il », « y a-t-il », « toujours », « jamais »,
   « parfois », « partout », « nulle part », « quelque part », etc.
2. les [[qnTotMod][questions /modales/]] sont celles qui portent sur le nécessaire ou
   le possible, l'obligatoire ou le permis : elles contiennent des
   expressions comme « faut-il », « doit-on », « peut-on »,
   « nécessaire », « possible », « obligatoire », « interdit »,
   « autorisé », « permis », etc.


**** <<qnTotTout>> Toutes les questions totales call_compte[:stdin triQnTotales]()

\mbox{} \\

\noindent
#+name: triQnTotales
#+BEGIN_SRC sh :results output verbatim raw :exports results
./06-toutes_questions_totales | sed s/'^- '// | sed s/'$'/' \\\\'/g
#+END_SRC

**** <<qnTotQuant>> Question totale quantifiée call_compte[:stdin triQnQuant]()

\mbox{} \\

\noindent
#+name: triQnQuant
#+BEGIN_SRC sh :results output verbatim raw :exports results
./06-toutes_questions_totales_quantifiees | sed s/'^- '// | sed s/'$'/' \\\\'/g
#+END_SRC


**** <<qnTotMod>> Question totale modalisée call_compte[:stdin triQnMod]()

\mbox{} \\

\noindent
#+name: triQnMod
#+BEGIN_SRC sh :results output verbatim raw :exports results
./06-toutes_questions_totales_modales | sed s/'^- '// | sed s/'$'/' \\\\'/g
#+END_SRC


*** <<qnPart>> Question partielle : demande de précision call_compte[:stdin triQnPartielles]()

Les questions partielles sont celles qui /appellent une précision/ :
elles demandent de déterminer le groupe nominal ou le complément
circonstanciel qui rend une proposition vraie.

\bigskip

\noindent
#+name: triQnPartielles
#+BEGIN_SRC sh :results output verbatim raw :exports results
./06-toutes_questions_partielles | sed s/'^- '// | sed s/'$'/' \\\\'/g
#+END_SRC

** <<ntn>> Notions

Les sujets composés de notions demandent l'étude d'un ou plusieurs
concepts.

Parmi les sujets composés de notions, deux sont particulièrement
fréquents :

1. une [[ntnUn][notion unique]] ;
2. un [[ntnCpl][couple de notions]] reliées par une [[ntnCplConj][conjonction (« et »)]] ou une
   [[ntnCplDisj][disjonction (« ou »)]].

*** <<ntnUn>> Notion unique call_compte[:stdin triNtUnique]()

\noindent
#+name: triNtUnique
#+BEGIN_SRC sh :results output verbatim raw :exports results
./00-sujets | egrep  "^(|Le |La |Les |L')\w+$" | sed s/'$'/' \\\\'/g
#+END_SRC


*** <<ntnCpl>> Couple de notions

**** <<ntnCplConj>> Conjonction de notions call_compte[:stdin triCplEt]()

\mbox{} \\

\noindent
#+name: triCplEt
#+BEGIN_SRC sh :results output verbatim raw :exports results
./00-sujets | grep ' et ' | grep -v '?' | sed s/'$'/' \\\\'/g
#+END_SRC


**** <<ntnCplDisj>> Disjonction de notions call_compte[:stdin triCplOu]()

\mbox{} \\

\noindent
#+name: triCplOu
#+BEGIN_SRC sh :results output verbatim raw :exports results
./00-sujets | grep ' ou ' | sed s/'$'/' \\\\'/g
#+END_SRC


** <<ctn>> Citation call_compte[:stdin triCitation]()

Les citations sont des expressions entre guillemets. Les sujets de ce
type appellent l'examen d'une façon de parler.

\bigskip

\noindent
#+name: triCitation
#+BEGIN_SRC sh :results output verbatim raw :exports results
./00-sujets | grep '«' | sed s/'$'/' \\\\'/g
#+END_SRC
* <<concours>> Tri par concours

** Agrégation

*** Tous les sujets d'agrégation call_compte[:stdin triAgreg]()

\noindent
#+name: triAgreg
#+BEGIN_SRC sh :results output verbatim raw :exports results
./01-agregation | sed s/'$'/' \\\\'/g
#+END_SRC


*** Agrégation externe call_compte[:stdin triAgregExt]()

\noindent
#+name: triAgregExt
#+BEGIN_SRC sh :results output verbatim raw :exports results
./01-agregation_externe | sed s/'$'/' \\\\'/g
#+END_SRC


*** Agrégation interne call_compte[:stdin triAgregInt]()

\noindent
#+name: triAgregInt
#+BEGIN_SRC sh :results output verbatim raw :exports results
./01-agregation_interne | sed s/'$'/' \\\\'/g
#+END_SRC


** CAPES

*** Tous les sujets de CAPES call_compte[:stdin triCapes]()

\noindent
#+name: triCapes
#+BEGIN_SRC sh :results output verbatim raw :exports results
./02-capes | sed s/'$'/' \\\\'/g
#+END_SRC


*** CAPES externe call_compte[:stdin triCapesExt]()

\noindent
#+name: triCapesExt
#+BEGIN_SRC sh :results output verbatim raw :exports results
./02-capes_externe | sed s/'$'/' \\\\'/g
#+END_SRC


*** CAPES interne call_compte[:stdin triCapesInt]()

\noindent
#+name: triCapesInt
#+BEGIN_SRC sh :results output verbatim raw :exports results
./02-capes_interne | sed s/'$'/' \\\\'/g
#+END_SRC


** ENS

*** ENS A​/​L call_compte[:stdin triENSal]()

\noindent
#+name: triENSal
#+BEGIN_SRC sh :results output verbatim raw :exports results
./03-ens-ulm-al | sed s/'$'/' \\\\'/g
#+END_SRC


*** ENS B​/​L call_compte[:stdin triENSbl]()

\noindent
#+name: triENSbl
#+BEGIN_SRC sh :results output verbatim raw :exports results
./03-ens-ulm-bl | sed s/'$'/' \\\\'/g
#+END_SRC


* <<theme>> Tri par thème d'agrégation externe
** Philosophie générale call_compte[:stdin triThmPh]()

\noindent
#+name: triThmPh
#+BEGIN_SRC sh :results output verbatim raw :exports results
./01-agregation-philosophie_generale | sed s/'$'/' \\\\'/g
#+END_SRC


** Esthétique call_compte[:stdin triThmE]()

\noindent
#+name: triThmE
#+BEGIN_SRC sh :results output verbatim raw :exports results
./01-agregation-esthetique | sed s/'$'/' \\\\'/g
#+END_SRC


** Logique et épistémologie call_compte[:stdin triThmLE]()

\noindent
#+name: triThmLE
#+BEGIN_SRC sh :results output verbatim raw :exports results
./01-agregation-logique_epistemologie | sed s/'$'/' \\\\'/g
#+END_SRC


** Métaphysique call_compte[:stdin triThmMt]()

\noindent
#+name: triThmMt
#+BEGIN_SRC sh :results output verbatim raw :exports results
./01-agregation-metaphysique | sed s/'$'/' \\\\'/g
#+END_SRC


** Morale call_compte[:stdin triThmMr]()

\noindent
#+name: triThmMr
#+BEGIN_SRC sh :results output verbatim raw :exports results
./01-agregation-morale | sed s/'$'/' \\\\'/g
#+END_SRC


** Politique call_compte[:stdin triThmPo]()

\noindent
#+name: triThmPo
#+BEGIN_SRC sh :results output verbatim raw :exports results
./01-agregation-politique | sed s/'$'/' \\\\'/g
#+END_SRC


** Sciences humaines call_compte[:stdin triThmSH]()

\noindent
#+name: triThmSH
#+BEGIN_SRC sh :results output verbatim raw :exports results
./01-agregation-sciences_humaines | sed s/'$'/' \\\\'/g
#+END_SRC
